# Environment Variable Setup & .env Workflow – PM₂.₅ Forecasting Project

## 1. Purpose
This document explains how the project’s `.env` and `.env.example` files work,
where they are stored, and how they interact with the local runtime environment.

---

## 2. File Locations

### `.env.example` (template)
- Path in repo: `config/env/.env.example`
- Versioned in Git.
- Contains **example values** for all required environment variables:
  ```
  DATA_ROOT=C:\path\to\data
  MODELS_ROOT=C:\path\to\models
  CACHE_ROOT=C:\path\to\.cache
  ```
- Does not contain secrets; safe to commit.
- Acts as a **template** for creating your personal `.env` file.

### `.env` (local config)
- Path: `config/env/.env` **or** (for local convenience) repo root `.env`
- **Git-ignored** – never committed.
- Contains machine-specific absolute paths (or cloud URIs) for:
  - `DATA_ROOT` – directory where raw/curated data is stored locally
  - `MODELS_ROOT` – directory where trained model artifacts are stored
  - `CACHE_ROOT` – local cache for temporary downloads or API calls
- Required for both local runs and CI smoke tests.

---

## 3. How It Works

1. **Python-dotenv** loads `.env` automatically at runtime (see `scripts/smoke_test.py`).
2. The smoke test checks for critical vars (`DATA_ROOT`, `MODELS_ROOT`) before running.
3. All file I/O in Stage 1 uses these variables to build paths via `fsspec`.
   - Example: `file://${DATA_ROOT}/raw/observations/...`
4. By editing `.env`, you can switch between local paths and remote storage (e.g. `s3://bucket/...`) without changing code.

---

## 4. Setup Steps (Windows PowerShell, no admin rights)

```powershell
# 1. Ensure venv is active
& "C:\aqf311\.venv\Scripts\python.exe" -m pip list

# 2. Create local data/model/cache dirs OUTSIDE sync folders
New-Item -ItemType Directory -Force -Path "C:\aqf311\data","C:\aqf311\models","C:\aqf311\.cache" | Out-Null

# 3. Copy template and edit
Copy-Item "config\env\.env.example" ".env" -Force
notepad .env  # Update DATA_ROOT, MODELS_ROOT, CACHE_ROOT paths

# Example contents:
# DATA_ROOT=C:\aqf311\data
# MODELS_ROOT=C:\aqf311\models
# CACHE_ROOT=C:\aqf311\.cache

# 4. Test
& "C:\aqf311\.venv\Scripts\python.exe" scripts\smoke_test.py
# Expect: Smoke test OK.
```

---

## 5. CI & Cloud Considerations
- In CI, `.env` is generated from `.env.example` with ephemeral paths.
- In cloud, `.env` will point to `s3://` or similar URIs but **use the same keys**.
- No secrets are stored in `.env`; if needed later, they will be injected via
  a secure secrets manager.

---

## 6. Maintenance
- Keep `.env.example` updated whenever a new environment variable is introduced.
- Never commit your local `.env`.
- Verify `.env` loads correctly after repo updates by re-running the smoke test.

---

**Last updated:** 2025-08-14
